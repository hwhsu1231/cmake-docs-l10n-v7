# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: ci-pr-merged-to-l10n

on:
  pull_request:
    branches:
      - l10n
    types:
      - closed

jobs:
  print-for-debug:
    runs-on: ubuntu-latest
    steps:
      - name: Print Contexts/Inputs
        shell: bash
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.event.action = ${{ github.event.action }}"
          echo "github.event.number = ${{ github.event.number }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "github.event.pull_request.base.ref = ${{ github.event.pull_request.base.ref }}"
          echo "github.event.pull_request.head.ref = ${{ github.event.pull_request.head.ref }}"
          echo "github.event.pull_request.merged = ${{ github.event.pull_request.merged }}"
          echo "github.event.pull_request.labels.*.name = ${{ toJson(github.event.pull_request.labels.*.name) }}"
          echo "github.base_ref = ${{ github.base_ref }}"
          echo "github.head_ref = ${{ github.head_ref }}"
          echo "[Inputs]"

  precondition:
    runs-on: ubuntu-latest
    steps:
      - name: Print Contexts/Inputs
        shell: bash
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.base_ref = ${{ github.base_ref }}"
          echo "github.head_ref = ${{ github.head_ref }}"
          echo "github.event.action = ${{ github.event.action }}"
          echo "github.event.number = ${{ github.event.number }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "github.event.pull_request.base.ref = ${{ github.event.pull_request.base.ref }}"
          echo "github.event.pull_request.head.ref = ${{ github.event.pull_request.head.ref }}"
          echo "github.event.pull_request.merged = ${{ github.event.pull_request.merged }}"
          echo "github.event.pull_request.labels.*.name = ${{ toJson(github.event.pull_request.labels.*.name) }}"
          echo "[Inputs]"
      - name: Check Secrets
        shell: bash
        run: |
          SECRETS_EXIST=true
          if [[ -z "${{ secrets.ACTOR_GITHUB_TOKEN }}" ]]; then
            echo "secrets.ACTOR_GITHUB_TOKEN is missing."
            SECRETS_EXIST=false
          fi
          if [[ "${SECRETS_EXIST}" == "false" ]]; then
            echo "Error: Some secrets are missing." >&2
            exit 1
          fi
      - name: Check Variables
        shell: bash
        run: |
          VARIABLES_EXIST=true
          if [[ "${VARIABLES_EXIST}" == "false" ]]; then
            echo "Error: Some variables are missing." >&2
            exit 1
          fi

  caller:
    needs: [ 'precondition' ]
    # Beware of https://stackoverflow.com/a/62199280/16265240
    if: ${{ ( ( github.event_name == 'pull_request' ) &&
              ( github.event.pull_request.merged == true ) &&
              ( contains(github.event.pull_request.labels.*.name, 'gettext') ||
                contains(github.event.pull_request.labels.*.name, 'tmscli') ) ) }}
    uses: hwhsu1231/ci-sphinx/.github/workflows/use-pr-merged-to-l10n.yml@main
    with:
      RUNNER: 'ubuntu-latest'
      PR_TITLE: ${{ github.event.pull_request.title }}
      GETTEXT: ${{ contains(github.event.pull_request.labels.*.name, 'gettext') }}
      TMSCLI: ${{ contains(github.event.pull_request.labels.*.name, 'tmscli') }}
      CALLER_JOB: 'caller'
      ENABLE_JOB: true
    secrets:
      ACTOR_GITHUB_TOKEN: ${{ secrets.ACTOR_GITHUB_TOKEN }}
