# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: use-gettext-compend-po

on:
  workflow_call:
    inputs:
      RUNNER:
        type: string
        required: true
      CHECKOUT:
        type: string
        required: true
      VERSION:
        type: string
        required: true
      LANGUAGE:
        type: string
        required: true
      CALLER_JOB:
        type: string
        required: true
      ENABLE_JOB:
        type: boolean
        required: true
      ACTOR_ID:
        type: string
        required: true
      ACTOR_NAME:
        type: string
        required: true
      ACTOR_LOGIN:
        type: string
        required: true
    secrets:
      ACTOR_GITHUB_TOKEN:
        required: true

jobs:
  gettext-compend-po:
    if: ${{ inputs.ENABLE_JOB }}
    runs-on: ${{ inputs.RUNNER }}
    steps:
      - name: Print Contexts/Inputs/Secrets
        shell: bash
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.event.action = ${{ github.event.action }}"
          echo "github.event.number = ${{ github.event.number }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "[Inputs]"
          echo "inputs.RUNNER = ${{ inputs.RUNNER }}"
          echo "inputs.CHECKOUT = ${{ inputs.CHECKOUT }}"
          echo "inputs.VERSION = ${{ inputs.VERSION }}"
          echo "inputs.LANGUAGE = ${{ inputs.LANGUAGE }}"
          echo "inputs.CALLER_JOB = ${{ inputs.CALLER_JOB }}"
          echo "inputs.ENABLE_JOB = ${{ inputs.ENABLE_JOB }}"
          echo "inputs.ACTOR_ID = ${{ inputs.ACTOR_ID }}"
          echo "inputs.ACTOR_NAME = ${{ inputs.ACTOR_NAME }}"
          echo "inputs.ACTOR_LOGIN = ${{ inputs.ACTOR_LOGIN }}"
          echo "[Secrets]"
          echo "secrets.ACTOR_GITHUB_TOKEN = ${{ secrets.ACTOR_GITHUB_TOKEN }}"

      - name: Checkout to '${{ inputs.CHECKOUT }}'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.CHECKOUT }}
          token: ${{ secrets.ACTOR_GITHUB_TOKEN }}
          submodules: true
          fetch-depth: 0

      - name: Get Other Caches from versions.json
        id: gocv
        uses: ./.github/actions/get-other-caches-from-versions-file
        with:
          version: ${{ inputs.VERSION }}
          versions-file: 'versions.json'

      - name: Install CMake
        uses: ./.github/actions/install-cmake

      - name: Install Gettext
        uses: ./.github/actions/install-gettext

      - name: Configure the '${{ inputs.LANGUAGE }}' preset for '${{ inputs.VERSION }}' version
        uses: ./.github/actions/cmake-configure-preset
        with:
          source-directory: ${{ github.workspace }}
          preset: ${{ inputs.LANGUAGE }}
          cache-version: ${{ inputs.VERSION }}
          cache-auto-depend: 'OFF'
          cache-version-compendium: ${{ steps.gocv.outputs.VERSION_COMPENDIUM }}
          cache-version-of-python: ${{ steps.gocv.outputs.VERSION_OF_PYTHON }}
          cache-version-of-sphinx: ${{ steps.gocv.outputs.VERSION_OF_SPHINX }}
          cache-version-of-doxygen: ${{ steps.gocv.outputs.VERSION_OF_DOXYGEN }}
          cache-version-of-proj: ${{ steps.gocv.outputs.VERSION_OF_PROJ }}

      - name: Build the 'gettext_compend_po' target
        uses: ./.github/actions/cmake-build-target
        with:
          source-directory: ${{ github.workspace }}
          preset: ${{ inputs.LANGUAGE }}
          target: 'gettext_compend_po'

      - name: Get the Current Job's ID
        id: gcji
        uses: Tiryoh/gha-jobid-action@v1
        with:
          github_token: ${{ secrets.ACTOR_GITHUB_TOKEN }}
          job_name: '${{ inputs.CALLER_JOB }} / ${{ github.job }}'
          per_page: 100

      - name: Check Outputs of the Current Job's ID
        shell: bash
        run: |
          echo "Current Job's URL = ${{ steps.gcji.outputs.html_url }}"
          echo "Current Job's ID  = ${{ steps.gcji.outputs.job_id }}"

      - name: Set up mutex for 'l10n' branch
        uses: ben-z/gh-action-mutex@v1.0.0-alpha.9
        with:
          branch: mutex/l10n
          repo-token: ${{ secrets.ACTOR_GITHUB_TOKEN }}

      # https://stackoverflow.com/a/74071223/16265240
      - name: Add and Commit Changes
        id: acc
        uses: EndBug/add-and-commit@v9
        with:
          cwd: './l10n'
          add: './${{ inputs.VERSION }}'
          pull: '--rebase --autostash'  # required 'actions/checkout' with 'fetch-depth: 0'
          author_name: ${{ inputs.ACTOR_NAME }}
          author_email: ${{ inputs.ACTOR_ID }}+${{ inputs.ACTOR_LOGIN }}@users.noreply.github.com
          message: |
            tr(${{ inputs.VERSION }}): merge po with compendium of '${{ steps.gocv.outputs.VERSION_COMPENDIUM }}'

            Merged .po files of ${{ inputs.VERSION }} with compendium of ${{ steps.gocv.outputs.VERSION_COMPENDIUM }}

            Created by GitHub Workflows:

            - File: ${{ github.server_url }}/${{ github.repository }}/actions/workflows/${{ github.workflow }}.yml
            - Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            - Job: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ steps.gcji.outputs.job_id }}

      - name: Check Outputs of the Commit
        if: ${{ steps.acc.outputs.committed == 'true' }}
        shell: bash
        run: |
          echo "Commit's SHA = ${{ steps.acc.outputs.commit_long_sha }}"
          echo "Commit's URL = ${{ github.server_url }}/${{ github.repository }}/commit/${{ steps.acc.outputs.commit_long_sha }}"
