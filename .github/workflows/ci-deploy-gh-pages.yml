# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: ci-deploy-gh-pages

on:
  # Triggers the workflow based on a schedule.
  schedule:
    - cron: '0 8 * * 1'   # CRON_dev
    - cron: '0 8 1 * *'   # CRON_v3
  # Triggers the workflow manually through the GitHub UI.
  workflow_dispatch:
    inputs:
      TYPE:
        description: 'TYPE input'
        required: true
        type: choice
        default: 'matrix'
        options:
          - 'matrix'
          - 'single'
      VERSION:
        description: 'VERSION input (for single type)'
        required: true
        type: string
        default: 'git-master'
      VERSION_GROUP:
        description: 'VERSION_GROUP input (for matrix type)'
        required: true
        type: choice
        default: 'all'
        options:
          - 'all'
          - 'dev'
          - 'v3'
      LANGUAGE:
        description: 'LANGUAGE input'
        required: true
        type: string
        default: 'all'
      DEPLOY_ONLY:
        description: 'DEPLOY_ONLY input'
        required: true
        type: choice
        default: 'false'
        options:
          - 'true'
          - 'false'

env:
  CRON_dev: '0 8 * * 1'
  CRON_v3:  '0 8 1 * *'

jobs:
  precondition:
    if: ${{ ( github.event_name == 'schedule' ) ||
            ( github.event_name == 'workflow_dispatch' && inputs.TYPE == 'matrix' ) ||
            ( github.event_name == 'workflow_dispatch' && inputs.TYPE == 'single' ) }}
    runs-on: ubuntu-latest
    steps:
      - name: Print Contexts/Inputs/Variables/Secrets
        shell: bash
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "github.event.schedule = ${{ github.event.schedule }}"
          echo "[Inputs]"
          echo "inputs.TYPE = ${{ inputs.TYPE }}"
          echo "inputs.VERSION = ${{ inputs.VERSION }}"
          echo "inputs.VERSION_GROUP = ${{ inputs.VERSION_GROUP }}"
          echo "inputs.LANGUAGE = ${{ inputs.LANGUAGE }}"
          echo "inputs.DEPLOY_ONLY = ${{ inputs.DEPLOY_ONLY }}"
          echo "[Variables]"
          echo "vars.ACTOR_NAME = ${{ vars.ACTOR_NAME }}"
          echo "vars.ACTOR_EMAIL = ${{ vars.ACTOR_EMAIL }}"
          echo "[Secrets]"
          echo "secrets.ACTOR_GITHUB_TOKEN = ${{ secrets.ACTOR_GITHUB_TOKEN }}"
      - name: Check Variables
        shell: bash
        run: |
          VARIABLES_EXIST=true
          if [[ -z "${{ vars.ACTOR_NAME }}" ]]; then
            echo "vars.ACTOR_NAME is missing."
            VARIABLES_EXIST=false
          fi
          if [[ -z "${{ vars.ACTOR_EMAIL }}" ]]; then
            echo "vars.ACTOR_EMAIL is missing."
            VARIABLES_EXIST=false
          fi
          if [[ "${VARIABLES_EXIST}" == "false" ]]; then
            echo "Error: Some variables are missing." >&2
            exit 1
          fi
      - name: Check Secrets
        shell: bash
        run: |
          SECRETS_EXIST=true
          if [[ -z "${{ secrets.ACTOR_GITHUB_TOKEN }}" ]]; then
            echo "secrets.ACTOR_GITHUB_TOKEN is missing."
            SECRETS_EXIST=false
          fi
          if [[ "${SECRETS_EXIST}" == "false" ]]; then
            echo "Error: Some secrets are missing." >&2
            exit 1
          fi

  get-matrix:
    if: ${{ ( github.event_name == 'schedule' ) ||
            ( github.event_name == 'workflow_dispatch' && inputs.TYPE == 'matrix' ) ||
            ( github.event_name == 'workflow_dispatch' && inputs.TYPE == 'single' ) }}
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.gmjl.outputs.MATRIX }}
    steps:
      - name: Checkout to '${{ github.ref }}'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: false
      - name: Get Outputs from Schedule
        if: ${{ github.event_name == 'schedule' }}
        id: gos
        uses: hwhsu1231/ci-sphinx/.github/actions/get-outputs-from-schedule@main
        with:
          schedule: ${{ github.event.schedule }}
      - name: Get VERSION_LIST and ALLINONE_LIST from versions.json
        id: gvav
        uses: hwhsu1231/ci-sphinx/.github/actions/get-version-allinone-list-from-versions-file@main
        with:
          type: ${{ inputs.TYPE || steps.gos.outputs.TYPE }}
          version: ${{ inputs.VERSION || steps.gos.outputs.VERSION }}
          version-group: ${{ inputs.VERSION_GROUP || steps.gos.outputs.VERSION_GROUP }}
          version-filter: 'all'
      - name: Get LANGUAGE_LIST from languages.json
        id: glll
        uses: hwhsu1231/ci-sphinx/.github/actions/get-language-list-from-languages-file@main
        with:
          language: ${{ inputs.LANGUAGE || steps.gos.outputs.LANGUAGE }}
      - name: Get MATRIX from the JSON Lists
        id: gmjl
        uses: hwhsu1231/ci-sphinx/.github/actions/get-matrix-from-json-lists@main
        with:
          matrix-type: 'version-language'
          version-list: ${{ steps.gvav.outputs.VERSION_LIST }}
          allinone-list: ${{ steps.gvav.outputs.ALLINONE_LIST }}
          language-list: ${{ steps.glll.outputs.LANGUAGE_LIST }}

  caller:
    needs: [ 'precondition', 'get-matrix' ]
    if: ${{ ( ( github.event_name == 'schedule' ) ||
              ( github.event_name == 'workflow_dispatch' && inputs.TYPE == 'matrix' ) ||
              ( github.event_name == 'workflow_dispatch' && inputs.TYPE == 'single' ) ) }}
    strategy:
      matrix: ${{ fromJSON(needs.get-matrix.outputs.MATRIX) }}
      fail-fast: false
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.VERSION }}-${{ matrix.LANGUAGE }}
      cancel-in-progress: true
    uses: hwhsu1231/ci-sphinx/.github/workflows/use-deploy-gh-pages.yml@main
    with:
      RUNNER: 'ubuntu-latest'
      CHECKOUT: ${{ github.ref }}
      VERSION: ${{ matrix.VERSION }}
      LANGUAGE: ${{ matrix.LANGUAGE }}
      MODE_OF_UPDATE: 'NEVER'
      BASEURL_HREF: 'https://hwhsu1231.github.io/cmake-docs-l10n-v7'
      CALLER_JOB: 'caller (${{ matrix.VERSION }}, ${{ matrix.LANGUAGE }})'
      ENABLE_JOB: true
      DEPLOY_HTML: true
      ACTOR_NAME: ${{ vars.ACTOR_NAME }}
      ACTOR_EMAIL: ${{ vars.ACTOR_EMAIL }}
    secrets:
      ACTOR_GITHUB_TOKEN: ${{ secrets.ACTOR_GITHUB_TOKEN }}

  deploy:
    needs: [ 'caller', 'get-matrix', 'precondition' ]
    # https://github.com/actions/runner/issues/1540
    # https://github.com/actions/runner/issues/2205
    # https://github.com/actions/runner/issues/2566
    # https://github.com/actions/runner/issues/2566#issuecomment-1522574653
    if: ${{ ( always() ) &&
            ( !contains(needs.*.result, 'failure') ) &&
            ( !contains(needs.*.result, 'cancelled') ) &&
            ( ( github.event_name == 'schedule' ) ||
              ( github.event_name == 'workflow_dispatch' && inputs.TYPE == 'matrix' ) ||
              ( github.event_name == 'workflow_dispatch' && inputs.TYPE == 'single' ) ) }}
    runs-on: ubuntu-latest
    # https://stackoverflow.com/questions/75319573/failing-to-deploy-github-pages-because-of-write-permission
    permissions:
      id-token: write
      pages: write
    steps:
      - name: Checkout to 'refs/heads/gh-pages'
        uses: actions/checkout@v4
        with:
          ref: 'refs/heads/gh-pages'
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          name: github-pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
