msgid ""
msgstr ""
"Project-Id-Version: 40c7da21a45a5aec5bfee08f6c874e33\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-17 07:01+0000\n"
"PO-Revision-Date: 2024-11-05 06:05\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 40c7da21a45a5aec5bfee08f6c874e33\n"
"X-Crowdin-Project-ID: 8\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /git-master/locale/pot/LC_MESSAGES/command/while.pot\n"
"X-Crowdin-File-ID: 9084\n"

#: ../../../command/while.rst:2
msgid "while"
msgstr ""

#: ../../../command/while.rst:4
msgid "Evaluate a group of commands while a condition is true"
msgstr ""

#: ../../../command/while.rst:6
msgid "while(<condition>)\n"
"  <commands>\n"
"endwhile()"
msgstr ""

#: ../../../command/while.rst:12
msgid "All commands between while and the matching :command:`endwhile` are recorded without being invoked.  Once the :command:`endwhile` is evaluated, the recorded list of commands is invoked as long as the ``<condition>`` is true."
msgstr ""

#: ../../../command/while.rst:16
msgid "The ``<condition>`` has the same syntax and is evaluated using the same logic as described at length for the :command:`if` command."
msgstr ""

#: ../../../command/while.rst:19
msgid "The commands :command:`break` and :command:`continue` provide means to escape from the normal control flow."
msgstr ""

#: ../../../command/while.rst:22
msgid "Per legacy, the :command:`endwhile` command admits an optional ``<condition>`` argument. If used, it must be a verbatim repeat of the argument of the opening ``while`` command."
msgstr ""

#: ../../../command/while.rst:28
msgid "See Also"
msgstr ""

#: ../../../command/while.rst:30
msgid ":command:`break`"
msgstr ""

#: ../../../command/while.rst:31
msgid ":command:`continue`"
msgstr ""

#: ../../../command/while.rst:32
msgid ":command:`foreach`"
msgstr ""

#: ../../../command/while.rst:33
msgid ":command:`endwhile`"
msgstr ""

