msgid ""
msgstr ""
"Project-Id-Version: 40c7da21a45a5aec5bfee08f6c874e33\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-18 11:42+0000\n"
"PO-Revision-Date: 2024-11-05 06:05\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 40c7da21a45a5aec5bfee08f6c874e33\n"
"X-Crowdin-Project-ID: 8\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /git-master/locale/pot/LC_MESSAGES/variable/CMAKE_CFG_INTDIR.pot\n"
"X-Crowdin-File-ID: 9126\n"

#: ../../../variable/CMAKE_CFG_INTDIR.rst:2
msgid "CMAKE_CFG_INTDIR"
msgstr ""

#: ../../../variable/CMAKE_CFG_INTDIR.rst:6
msgid "This variable has poor support on :generator:`Ninja Multi-Config`, and predates the existence of the :genex:`$<CONFIG>` generator expression. Use ``$<CONFIG>`` instead."
msgstr ""

#: ../../../variable/CMAKE_CFG_INTDIR.rst:10
msgid "Build-time reference to per-configuration output subdirectory."
msgstr ""

#: ../../../variable/CMAKE_CFG_INTDIR.rst:12
msgid "For native build systems supporting multiple configurations in the build tree (such as :ref:`Visual Studio Generators` and :generator:`Xcode`), the value is a reference to a build-time variable specifying the name of the per-configuration output subdirectory.  On :ref:`Makefile Generators` this evaluates to `.` because there is only one configuration in a build tree. Example values:"
msgstr ""

#: ../../../variable/CMAKE_CFG_INTDIR.rst:21
msgid "$(Configuration)     = Visual Studio\n"
"$(CONFIGURATION)     = Xcode\n"
".                    = Make-based tools\n"
".                    = Ninja\n"
"${CONFIGURATION}     = Ninja Multi-Config"
msgstr ""

#: ../../../variable/CMAKE_CFG_INTDIR.rst:27
msgid "Since these values are evaluated by the native build system, this variable is suitable only for use in command lines that will be evaluated at build time.  Example of intended usage:"
msgstr ""

#: ../../../variable/CMAKE_CFG_INTDIR.rst:33
msgid "add_executable(mytool mytool.c)\n"
"add_custom_command(\n"
"  OUTPUT out.txt\n"
"  COMMAND ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool\n"
"          ${CMAKE_CURRENT_SOURCE_DIR}/in.txt out.txt\n"
"  DEPENDS mytool in.txt\n"
"  )\n"
"add_custom_target(drive ALL DEPENDS out.txt)"
msgstr ""

#: ../../../variable/CMAKE_CFG_INTDIR.rst:42
msgid "Note that ``CMAKE_CFG_INTDIR`` is no longer necessary for this purpose but has been left for compatibility with existing projects.  Instead :command:`add_custom_command` recognizes executable target names in its ``COMMAND`` option, so ``${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool`` can be replaced by just ``mytool``."
msgstr ""

#: ../../../variable/CMAKE_CFG_INTDIR.rst:49
msgid "This variable is read-only.  Setting it is undefined behavior.  In multi-configuration build systems the value of this variable is passed as the value of preprocessor symbol ``CMAKE_INTDIR`` to the compilation of all source files."
msgstr ""

