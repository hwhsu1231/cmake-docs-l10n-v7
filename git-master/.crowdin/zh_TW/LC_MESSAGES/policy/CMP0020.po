msgid ""
msgstr ""
"Project-Id-Version: 40c7da21a45a5aec5bfee08f6c874e33\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-17 07:01+0000\n"
"PO-Revision-Date: 2024-11-05 06:06\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 40c7da21a45a5aec5bfee08f6c874e33\n"
"X-Crowdin-Project-ID: 8\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /git-master/locale/pot/LC_MESSAGES/policy/CMP0020.pot\n"
"X-Crowdin-File-ID: 9432\n"

#: ../../../policy/CMP0020.rst:2
msgid "CMP0020"
msgstr ""

#: ../../../policy/CMP0020.rst:4
msgid "Automatically link Qt executables to ``qtmain`` target on Windows."
msgstr ""

#: ../../../policy/CMP0020.rst:6
msgid "CMake 2.8.10 and lower required users of Qt to always specify a link dependency to the ``qtmain.lib`` static library manually on Windows. CMake 2.8.11 gained the ability to evaluate generator expressions while determining the link dependencies from ``IMPORTED`` targets.  This allows CMake itself to automatically link executables which link to Qt to the ``qtmain.lib`` library when using ``IMPORTED`` Qt targets.  For applications already linking to ``qtmain.lib``, this should have little impact.  For applications which supply their own alternative WinMain implementation and for applications which use the QAxServer library, this automatic linking will need to be disabled as per the documentation."
msgstr ""

#: ../../../policy/CMP0020.rst:18
msgid "The ``OLD`` behavior for this policy is not to link executables to ``qtmain.lib`` automatically when they link to the QtCore ``IMPORTED`` target. The ``NEW`` behavior for this policy is to link executables to ``qtmain.lib`` automatically when they link to QtCore ``IMPORTED`` target."
msgstr ""

#: ../../../policy/STANDARD_ADVICE.txt:1
msgid "This policy was introduced in CMake version |INTRODUCED_IN_CMAKE_VERSION|. It may be set by :command:`cmake_policy` or :command:`cmake_minimum_required`. If it is not set, CMake |WARNS_OR_DOES_NOT_WARN|, and uses ``OLD`` behavior."
msgstr ""

#: ../../../policy/DEPRECATED.txt:2
msgid "The ``OLD`` behavior of a policy is :manual:`deprecated by definition <cmake-policies(7)>` and may be removed in a future version of CMake."
msgstr ""

