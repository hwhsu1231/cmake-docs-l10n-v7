msgid ""
msgstr ""
"Project-Id-Version: 40c7da21a45a5aec5bfee08f6c874e33\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-17 07:01+0000\n"
"PO-Revision-Date: 2024-11-05 06:07\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 40c7da21a45a5aec5bfee08f6c874e33\n"
"X-Crowdin-Project-ID: 8\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /git-master/locale/pot/LC_MESSAGES/command/link_directories.pot\n"
"X-Crowdin-File-ID: 8974\n"

#: ../../../command/link_directories.rst:2
msgid "link_directories"
msgstr ""

#: ../../../command/link_directories.rst:4
msgid "Add directories in which the linker will look for libraries."
msgstr ""

#: ../../../command/link_directories.rst:6
msgid "link_directories([AFTER|BEFORE] directory1 [directory2 ...])"
msgstr ""

#: ../../../command/link_directories.rst:10
msgid "Adds the paths in which the linker should search for libraries. Relative paths given to this command are interpreted as relative to the current source directory, see :policy:`CMP0015`."
msgstr ""

#: ../../../command/link_directories.rst:14
msgid "The command will apply only to targets created after it is called."
msgstr ""

#: ../../../command/link_directories.rst:16
msgid "The directories are added to the :prop_dir:`LINK_DIRECTORIES` directory property for the current ``CMakeLists.txt`` file, converting relative paths to absolute as needed.  See the :manual:`cmake-buildsystem(7)` manual for more on defining buildsystem properties."
msgstr ""

#: ../../../command/link_directories.rst:22
msgid "By default the directories specified are appended onto the current list of directories.  This default behavior can be changed by setting :variable:`CMAKE_LINK_DIRECTORIES_BEFORE` to ``ON``.  By using ``AFTER`` or ``BEFORE`` explicitly, you can select between appending and prepending, independent of the default."
msgstr ""

#: ../../../command/link_directories.rst:29
msgid "Arguments to ``link_directories`` may use \"generator expressions\" with the syntax \"$<...>\".  See the :manual:`cmake-generator-expressions(7)` manual for available expressions."
msgstr ""

#: ../../../command/link_directories.rst:36
msgid "This command is rarely necessary and should be avoided where there are other choices.  Prefer to pass full absolute paths to libraries where possible, since this ensures the correct library will always be linked. The :command:`find_library` command provides the full path, which can generally be used directly in calls to :command:`target_link_libraries`. Situations where a library search path may be needed include:"
msgstr ""

#: ../../../command/link_directories.rst:43
msgid "Project generators like Xcode where the user can switch target architecture at build time, but a full path to a library cannot be used because it only provides one architecture (i.e. it is not a universal binary)."
msgstr ""

#: ../../../command/link_directories.rst:47
msgid "Libraries may themselves have other private library dependencies that expect to be found via ``RPATH`` mechanisms, but some linkers are not able to fully decode those paths (e.g. due to the presence of things like ``$ORIGIN``)."
msgstr ""

#: ../../../command/link_directories.rst:52
msgid "If a library search path must be provided, prefer to localize the effect where possible by using the :command:`target_link_directories` command rather than ``link_directories()``.  The target-specific command can also control how the search directories propagate to other dependent targets."
msgstr ""

#: ../../../command/link_directories.rst:58
msgid "See Also"
msgstr ""

#: ../../../command/link_directories.rst:60
msgid ":command:`target_link_directories`"
msgstr ""

#: ../../../command/link_directories.rst:61
msgid ":command:`target_link_libraries`"
msgstr ""

