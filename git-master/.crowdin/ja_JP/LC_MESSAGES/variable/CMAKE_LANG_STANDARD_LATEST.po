msgid ""
msgstr ""
"Project-Id-Version: 40c7da21a45a5aec5bfee08f6c874e33\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-17 07:01+0000\n"
"PO-Revision-Date: 2024-07-21 04:04\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 40c7da21a45a5aec5bfee08f6c874e33\n"
"X-Crowdin-Project-ID: 8\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /git-master/locale/pot/LC_MESSAGES/variable/CMAKE_LANG_STANDARD_LATEST.pot\n"
"X-Crowdin-File-ID: 8590\n"

#: ../../../variable/CMAKE_LANG_STANDARD_LATEST.rst:2
msgid "CMAKE_<LANG>_STANDARD_LATEST"
msgstr ""

#: ../../../variable/CMAKE_LANG_STANDARD_LATEST.rst:6
msgid "This variable represents the minimum between the latest version of the standard for language ``<LANG>`` which is supported by the current compiler and the latest version which is supported by CMake. Its value will be set to one of the supported values of the corresponding :prop_tgt:`<LANG>_STANDARD` target property; see the documentation of that property for a list of supported languages."
msgstr ""

#: ../../../variable/CMAKE_LANG_STANDARD_LATEST.rst:13
msgid "See the :manual:`cmake-compile-features(7)` manual for information on compile features and a list of supported compilers."
msgstr ""

#: ../../../variable/CMAKE_LANG_STANDARD_LATEST.rst:18
msgid "``CMAKE_<LANG>_STANDARD_LATEST`` will never be set to a language standard which CMake recognizes but provides no support for. Unless explicitly stated otherwise, every value which is supported by the corresponding :prop_tgt:`<LANG>_STANDARD` target property represents a standard of language ``<LANG>`` which is both recognized and supported by CMake."
msgstr ""

#: ../../../variable/CMAKE_LANG_STANDARD_LATEST.rst:25
msgid "Checking for Language Standard Support"
msgstr ""

#: ../../../variable/CMAKE_LANG_STANDARD_LATEST.rst:27
msgid "It is possible to use the value of the ``CMAKE_<LANG>_STANDARD_LATEST`` variable to check for language standard support. This can be used to, e.g., conditionally enable optional features for a distributed library."
msgstr ""

#: ../../../variable/CMAKE_LANG_STANDARD_LATEST.rst:31
msgid "When doing so, one should be careful to **not** rely on integer value comparisons between standard levels. This is because some older standards of a given language which are supported by CMake (e.g., C++98, represented as ``98``) will have a higher numerical value than newer standards of that same language."
msgstr ""

#: ../../../variable/CMAKE_LANG_STANDARD_LATEST.rst:37
msgid "The following code sample demonstrates how one might correctly check for C++17 support:"
msgstr ""

#: ../../../variable/CMAKE_LANG_STANDARD_LATEST.rst:40
msgid "# Careful! We cannot do direct integer comparisons with\n"
"# CMAKE_CXX_STANDARD_LATEST because some earlier C++ standards (e.g.,\n"
"# C++98) will have a higher numerical value than our requirement (C++17).\n"
"#\n"
"# Instead, we keep a list of unsupported C++ standards and check if\n"
"# CMAKE_CXX_STANDARD_LATEST appears in that list.\n"
"set(UNSUPPORTED_CXX_STANDARDS\n"
"  98\n"
"  11\n"
"  14\n"
")\n\n"
"list(FIND UNSUPPORTED_CXX_STANDARDS ${CMAKE_CXX_STANDARD_LATEST} UNSUPPORTED_CXX_STANDARDS_INDEX)\n\n"
"if(UNSUPPORTED_CXX_STANDARDS_INDEX EQUAL -1)\n"
"  # We know that the current compiler supports at least C++17. Enabling\n"
"  # some optional feature...\n"
"else()\n"
"  message(STATUS\n"
"    \"Feature X is disabled because it requires C++17, but the current \"\n"
"    \"compiler only supports C++${CMAKE_CXX_STANDARD_LATEST}.\"\n"
"  )\n"
"endif()"
msgstr ""

