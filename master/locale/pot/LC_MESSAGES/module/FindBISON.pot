# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2024 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake git-master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-31 17:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindBISON.cmake:6
msgid "FindBISON"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:8
msgid ""
"Find ``bison`` executable and provide a macro to generate custom build rules."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:10
msgid "The module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:13
msgid "``BISON_FOUND``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:13
msgid "True if the program was found."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:16
msgid "``BISON_EXECUTABLE``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:16
msgid "The path to the ``bison`` program."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:19
msgid "``BISON_VERSION``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:19
msgid "The version of ``bison``."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:21
msgid ""
"The minimum required version of ``bison`` can be specified using the "
"standard CMake syntax, e.g. :command:`find_package(BISON 2.1.3)`."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:24
msgid "If ``bison`` is found, the module defines the macro:"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:28
msgid ""
"bison_target(<Name> <YaccInput> <CodeOutput>\n"
"             [COMPILE_FLAGS <string>]\n"
"             [DEFINES_FILE <file>]\n"
"             [VERBOSE [<file>]]\n"
"             [REPORT_FILE <file>]\n"
"             )"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:37
msgid ""
"which will create a custom rule to generate a parser.  ``<YaccInput>`` is "
"the path to a yacc file.  ``<CodeOutput>`` is the name of the source file "
"generated by bison.  A header file can also be generated, and contains the "
"token list."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:42
msgid ""
"When :policy:`CMP0088` is set to ``NEW``, ``bison`` runs in the :variable:"
"`CMAKE_CURRENT_BINARY_DIR` directory."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:46
msgid "The options are:"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:50
msgid "``COMPILE_FLAGS <string>``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:49
msgid ""
"Space-separated bison options added to the ``bison`` command line. A :ref:`;-"
"list <CMake Language Lists>` will not work."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:55
msgid "``DEFINES_FILE <file>``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:55
msgid "Specify a non-default header ``<file>`` to be generated by ``bison``."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:63
msgid "``VERBOSE [<file>]``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:58
msgid "Tell ``bison`` to write a report file of the grammar and parser."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:60
msgid ""
"If ``<file>`` is given, it specifies path the report file is copied to. "
"``[<file>]`` is left for backward compatibility of this module. Use "
"``VERBOSE REPORT_FILE <file>``."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:68
msgid "``REPORT_FILE <file>``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:68
msgid "Specify a non-default report ``<file>``, if generated."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:70
msgid "The macro defines the following variables:"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:73
msgid "``BISON_<Name>_DEFINED``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:73
msgid "True if the macro ran successfully."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:76
msgid "``BISON_<Name>_INPUT``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:76
msgid "The input source file, an alias for ``<YaccInput>``."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:79
msgid "``BISON_<Name>_OUTPUT_SOURCE``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:79
msgid "The source file generated by ``bison``."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:82
msgid "``BISON_<Name>_OUTPUT_HEADER``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:82
msgid "The header file generated by ``bison``."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:86
msgid "``BISON_<Name>_OUTPUTS``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:85
msgid ""
"All files generated by ``bison`` including the source, the header and the "
"report."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:89
msgid "``BISON_<Name>_COMPILE_FLAGS``"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:89
msgid "Options used in the ``bison`` command line."
msgstr ""

#: ../../../../Modules/FindBISON.cmake:92
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindBISON.cmake:94
msgid ""
"find_package(BISON)\n"
"bison_target(MyParser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp\n"
"             DEFINES_FILE ${CMAKE_CURRENT_BINARY_DIR}/parser.h)\n"
"add_executable(Foo main.cpp ${BISON_MyParser_OUTPUTS})"
msgstr ""
