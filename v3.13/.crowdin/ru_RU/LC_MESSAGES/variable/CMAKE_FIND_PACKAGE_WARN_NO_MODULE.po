msgid ""
msgstr ""
"Project-Id-Version: 40c7da21a45a5aec5bfee08f6c874e33\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-18 02:39+0000\n"
"PO-Revision-Date: 2024-08-15 00:21\n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: 40c7da21a45a5aec5bfee08f6c874e33\n"
"X-Crowdin-Project-ID: 8\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /v3.13/locale/pot/LC_MESSAGES/variable/CMAKE_FIND_PACKAGE_WARN_NO_MODULE.pot\n"
"X-Crowdin-File-ID: 15671\n"
"Language: ru_RU\n"

#: ../../../variable/CMAKE_FIND_PACKAGE_WARN_NO_MODULE.rst:2
msgid "CMAKE_FIND_PACKAGE_WARN_NO_MODULE"
msgstr ""

#: ../../../variable/CMAKE_FIND_PACKAGE_WARN_NO_MODULE.rst:4
msgid "Tell :command:`find_package` to warn if called without an explicit mode."
msgstr ""

#: ../../../variable/CMAKE_FIND_PACKAGE_WARN_NO_MODULE.rst:6
msgid "If :command:`find_package` is called without an explicit mode option (``MODULE``, ``CONFIG``, or ``NO_MODULE``) and no ``Find<pkg>.cmake`` module is in :variable:`CMAKE_MODULE_PATH` then CMake implicitly assumes that the caller intends to search for a package configuration file.  If no package configuration file is found then the wording of the failure message must account for both the case that the package is really missing and the case that the project has a bug and failed to provide the intended Find module.  If instead the caller specifies an explicit mode option then the failure message can be more specific."
msgstr ""

#: ../../../variable/CMAKE_FIND_PACKAGE_WARN_NO_MODULE.rst:16
msgid "Set ``CMAKE_FIND_PACKAGE_WARN_NO_MODULE`` to ``TRUE`` to tell :command:`find_package` to warn when it implicitly assumes Config mode.  This helps developers enforce use of an explicit mode in all calls to :command:`find_package` within a project."
msgstr ""

