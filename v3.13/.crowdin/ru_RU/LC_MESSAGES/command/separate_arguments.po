msgid ""
msgstr ""
"Project-Id-Version: 40c7da21a45a5aec5bfee08f6c874e33\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-18 02:39+0000\n"
"PO-Revision-Date: 2024-08-15 00:21\n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: 40c7da21a45a5aec5bfee08f6c874e33\n"
"X-Crowdin-Project-ID: 8\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /v3.13/locale/pot/LC_MESSAGES/command/separate_arguments.pot\n"
"X-Crowdin-File-ID: 13583\n"
"Language: ru_RU\n"

#: ../../../command/separate_arguments.rst:2
msgid "separate_arguments"
msgstr ""

#: ../../../command/separate_arguments.rst:4
msgid "Parse space-separated arguments into a semicolon-separated list."
msgstr ""

#: ../../../command/separate_arguments.rst:8
msgid "separate_arguments(<var> <NATIVE|UNIX|WINDOWS>_COMMAND \"<args>\")"
msgstr ""

#: ../../../command/separate_arguments.rst:10
msgid "Parses a UNIX- or Windows-style command-line string \"<args>\" and stores a semicolon-separated list of the arguments in ``<var>``.  The entire command line must be given in one \"<args>\" argument."
msgstr ""

#: ../../../command/separate_arguments.rst:14
msgid "The ``UNIX_COMMAND`` mode separates arguments by unquoted whitespace.  It recognizes both single-quote and double-quote pairs.  A backslash escapes the next literal character (``\\\"`` is ``\"``); there are no special escapes (``\\n`` is just ``n``)."
msgstr ""

#: ../../../command/separate_arguments.rst:19
msgid "The ``WINDOWS_COMMAND`` mode parses a Windows command-line using the same syntax the runtime library uses to construct argv at startup.  It separates arguments by whitespace that is not double-quoted. Backslashes are literal unless they precede double-quotes.  See the MSDN article `Parsing C Command-Line Arguments`_ for details."
msgstr ""

#: ../../../command/separate_arguments.rst:25
msgid "The ``NATIVE_COMMAND`` mode parses a Windows command-line if the host system is Windows, and a UNIX command-line otherwise."
msgstr ""

#: ../../../command/separate_arguments.rst:32
msgid "separate_arguments(<var>)"
msgstr ""

#: ../../../command/separate_arguments.rst:34
msgid "Convert the value of ``<var>`` to a semi-colon separated list.  All spaces are replaced with ';'.  This helps with generating command lines."
msgstr ""

