msgid ""
msgstr ""
"Project-Id-Version: 40c7da21a45a5aec5bfee08f6c874e33\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-18 02:39+0000\n"
"PO-Revision-Date: 2024-11-05 06:05\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 40c7da21a45a5aec5bfee08f6c874e33\n"
"X-Crowdin-Project-ID: 8\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /v3.13/locale/pot/LC_MESSAGES/command/add_link_options.pot\n"
"X-Crowdin-File-ID: 15321\n"
"Language: zh_CN\n"

#: ../../../command/add_link_options.rst:2
msgid "add_link_options"
msgstr ""

#: ../../../command/add_link_options.rst:4
msgid "Adds options to the link of shared library, module and executable targets."
msgstr ""

#: ../../../command/add_link_options.rst:8
msgid "add_link_options(<option> ...)"
msgstr ""

#: ../../../command/add_link_options.rst:10
msgid "Adds options to the link step for targets in the current directory and below that are added after this command is invoked. See documentation of the :prop_dir:`directory <LINK_OPTIONS>` and :prop_tgt:`target <LINK_OPTIONS>` ``LINK_OPTIONS`` properties."
msgstr ""

#: ../../../command/add_link_options.rst:15
msgid "This command can be used to add any options, but alternative commands exist to add libraries (:command:`target_link_libraries` or :command:`link_libraries`)."
msgstr ""

#: ../../../command/add_link_options.rst:19
msgid "Arguments to ``add_link_options`` may use \"generator expressions\" with the syntax ``$<...>``.  See the :manual:`cmake-generator-expressions(7)` manual for available expressions.  See the :manual:`cmake-buildsystem(7)` manual for more on defining buildsystem properties."
msgstr ""

#: ../../../command/OPTIONS_SHELL.txt:1
msgid "The final set of compile or link options used for a target is constructed by accumulating options from the current target and the usage requirements of it dependencies.  The set of options is de-duplicated to avoid repetition. While beneficial for individual options, the de-duplication step can break up option groups.  For example, ``-D A -D B`` becomes ``-D A B``.  One may specify a group of options using shell-like quoting along with a ``SHELL:`` prefix.  The ``SHELL:`` prefix is dropped and the rest of the option string is parsed using the :command:`separate_arguments` ``UNIX_COMMAND`` mode. For example, ``\"SHELL:-D A\" \"SHELL:-D B\"`` becomes ``-D A -D B``."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:1
msgid "To pass options to the linker tool, each compiler driver has is own syntax. The ``LINKER:`` prefix can be used to specify, in a portable way, options to pass to the linker tool. The ``LINKER:`` prefix is replaced by the required driver option and the rest of the option string defines linker arguments using ``,`` as separator. These arguments will be formatted according to the :variable:`CMAKE_<LANG>_LINKER_WRAPPER_FLAG` and :variable:`CMAKE_<LANG>_LINKER_WRAPPER_FLAG_SEP` variables."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:9
msgid "For example, ``\"LINKER:-z,defs\"`` becomes ``-Xlinker -z -Xlinker defs`` for ``Clang`` and ``-Wl,-z,defs`` for ``GNU GCC``."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:12
msgid "The ``LINKER:`` prefix can be specified as part of a ``SHELL:`` prefix expression."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:15
msgid "The ``LINKER:`` prefix supports, as alternate syntax, specification of arguments using ``SHELL:`` prefix and space as separator. Previous example becomes ``\"LINKER:SHELL:-z defs\"``."
msgstr ""

#: ../../../command/LINK_OPTIONS_LINKER.txt:21
msgid "Specifying ``SHELL:`` prefix elsewhere than at the beginning of the ``LINKER:`` prefix is not supported."
msgstr ""

